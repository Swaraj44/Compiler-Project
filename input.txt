
## testing1

!<  comments
for
multiline >!


import <iostream>
import <stdio.h>

introduce mx    9999999
introduce min  -9999999





oo<< var11


oo<<"String Declaration" el;
str22 <- "usa"
len1 <- len: str22

oo<< len1
oo<< "----- Check1 ------" el;

int_i    aa <- 0
float_f  bb <- 0.1


##output value of aa,bb

oo<< "aa: "
oo<<aa
oo<< "bb: "
oo<<bb

oo<< "switch case" el;
int_i sss <- -45 

match:
{
   -45) 12  ; sss
    45) aa <- 1 add 3 ; sss
   def: 14
}


oo<< "Check4" el;


//any-or
any: 1 -lt 3
{
    2
}
or:
{
   3
}



print: "Check6" el;

//any-maybe-or
any: 1 -gt 3
{
    4
}
maybe: 2 -eq 2
{
    5
}
or:
{
   6
}



oo<< "Check7" el;

//nested any-maybe-or
any: 1 -gt 2
{
    any: 8 -eq 6
    { 
        7
    }
    or:
    {
        8
    }    
}
maybe: 3 -ge 3
{
    any: 8 -eq 6
    { 
        9
    }
    or:
    {
        10
    }  
}
or:
{
    any: 8 -eq 6
    { 
        11
    }
    or:
    {
        12
    }  
}



## Array of 5 Instance
ARRAY: number 5
ARRAY: number 0 <- 10
ARRAY: number 1 <- 5
ARRAY: number 2 <- 1
ARRAY: number 3 <- 11
ARRAY: number 4 <- 55

## Printing Full Array
oo<< ARRAY: number   


oo<< "Check-10" el;

//array mechanism
print: "array mechanism" el;
ARRAY: arr1 3
ARRAY: arr1 0 <- 10
ARRAY: arr1 1 <- 5.5
ARRAY: arr1 2 <- 'z'
print: ARRAY: arr1






int_i start <- 0
int_i lenofnumber <- 0
len <- len: number
lenofnumber <- len: number


int_i a<-0

when: a -lt 3
{
oo<<"While Loop" el;
 
}



func int_i  add(int_i a,int_i b){

//statement

}






when: a -lt 3
{
 

when: a -lt 3
{
 3333
}


}


##For Loop

FOR: 1 , 5 , add 1
{
    
    FOR: 1 , 4 , add 1
   {
    11
   }

}

oo<< "------Check-11-----" el;

oo<<"Printing Array Number" el;

FOR: start , lenofnumber , add 1
{
    ARRAY: number oo<<
}


oo<< "Check-11--2" el;









FOR: start , lenofnumber , add 1
{
    ARRAY: number  print:
}


                                                                    

oo<< "Printing a set of numbers" el;
FOR: 1 , 100 , mul 2
{
    print:
}

oo<< "------Check-13----" el;






